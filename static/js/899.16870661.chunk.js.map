{"version":3,"file":"static/js/899.16870661.chunk.js","mappings":"+KA2EA,QAtEA,WACI,MAAM,GAAEA,IAAOC,EAAAA,EAAAA,KACTC,GAAWC,EAAAA,EAAAA,OACVC,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,IAQnD,IANAC,EAAAA,EAAAA,YAAU,KAEN,MAAMC,EAAUC,EAAAA,EAAcC,QAAOC,GAAUA,EAAOC,SAASC,aAAeb,IAC9EK,EAAiBG,EAAQ,GAC1B,CAACR,IAEyB,IAAzBI,EAAcU,OACd,OAAOC,EAAAA,EAAAA,KAAA,KAAAC,SAAG,0CAGd,MAAMC,EAAa,GAAGb,EAAc,GAAGc,aAAad,EAAc,GAAGe,WAG/DC,EAAY,CAAC,EACnBhB,EAAciB,SAAQC,IACbF,EAAUE,EAAM,iBACjBF,EAAUE,EAAM,eAAiB,CAC7BC,YAAa,EACbC,qBAAsB,EACtBC,KAAMH,EAAM,wBAGpBF,EAAUE,EAAM,eAAeC,aAAeD,EAAM,6BACnB,oBAA7BA,EAAM,qBACNF,EAAUE,EAAM,eAAeE,sBAAwBF,EAAM,6BACjE,IAIJ,MAAMI,EAActB,EAAcuB,QAAO,CAACC,EAAKN,KACtCM,EAAIN,EAAM,sBACXM,EAAIN,EAAM,oBAAsB,IAEpCM,EAAIN,EAAM,oBAAoBO,KAAKP,GAC5BM,IACR,CAAC,GAEJ,OACIE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBf,SAAA,EACpCD,EAAAA,EAAAA,KAAA,UAAQiB,QAASA,IAAM9B,GAAU,GAAI6B,UAAU,cAAaf,SAAC,UAC7DD,EAAAA,EAAAA,KAAA,MAAAC,SAAKC,KACLF,EAAAA,EAAAA,KAAA,MAAAC,SAAI,aACJD,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,cAAaf,SACvBiB,OAAOC,QAAQd,GAAWe,KAAI,CAAAC,EAAoBC,KAAK,IAAvBC,EAAWC,GAAKH,EAAA,OAC7CN,EAAAA,EAAAA,MAAA,OAAiBC,UAAU,cAAaf,SAAA,EACpCD,EAAAA,EAAAA,KAAA,KAAAC,UAAGD,EAAAA,EAAAA,KAAA,UAAAC,SAASsB,OACZR,EAAAA,EAAAA,MAAA,KAAAd,SAAA,CAAG,iBAAeuB,EAAKhB,gBACvBO,EAAAA,EAAAA,MAAA,KAAAd,SAAA,CAAG,2BAAyBuB,EAAKf,yBACjCM,EAAAA,EAAAA,MAAA,KAAAd,SAAA,CAAG,SAAOuB,EAAKd,UAJTY,EAKJ,OAGdtB,EAAAA,EAAAA,KAAA,MAAAC,SAAI,iBACHiB,OAAOC,QAAQR,GAAaS,KAAI,CAAAK,EAA4BH,KAAK,IAA/BI,EAAgBP,GAAQM,EAAA,OACvDV,EAAAA,EAAAA,MAAA,OAAiBC,UAAU,mBAAkBf,SAAA,EACzCD,EAAAA,EAAAA,KAAA,KAAAC,UAAGD,EAAAA,EAAAA,KAAA,UAAAC,SAASyB,MACXP,EAAQC,KAAI,CAACb,EAAOoB,KACjBZ,EAAAA,EAAAA,MAAA,KAAAd,SAAA,EAAaD,EAAAA,EAAAA,KAAA,UAAAC,SAASM,EAAM,gBAAwB,eAAYA,EAAM,sBAAsB,aAAWA,EAAM,+BAArGoB,OAHNL,EAKJ,MAItB,C","sources":["PlayerDetail.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport allPlayerData from './data/allPlayerData'; // Ensure this path is correct\nimport './PlayerDetail.css'; // Import specific styles for PlayerDetail\n\nfunction PlayerDetail() {\n    const { id } = useParams();\n    const navigate = useNavigate();\n    const [playerDetails, setPlayerDetails] = useState([]);\n\n    useEffect(() => {\n        // Filter player data based on PlayerID\n        const details = allPlayerData.filter(player => player.PlayerID.toString() === id);\n        setPlayerDetails(details);\n    }, [id]);\n\n    if (playerDetails.length === 0) {\n        return <p>No details available for this player.</p>;\n    }\n\n    const playerName = `${playerDetails[0].FirstName} ${playerDetails[0].LastName}`;\n\n    // Aggregate event data\n    const eventData = {};\n    playerDetails.forEach(entry => {\n        if (!eventData[entry[\"Event Name\"]]) {\n            eventData[entry[\"Event Name\"]] = {\n                totalPoints: 0,\n                juniorNationalPoints: 0,\n                rank: entry[\"Finishing Position\"]\n            };\n        }\n        eventData[entry[\"Event Name\"]].totalPoints += entry[\"Finishing Position Points\"];\n        if (entry[\"Tournament Type\"] === \"Junior National\") {\n            eventData[entry[\"Event Name\"]].juniorNationalPoints += entry[\"Finishing Position Points\"];\n        }\n    });\n\n    // Group tournaments by tournament name\n    const tournaments = playerDetails.reduce((acc, entry) => {\n        if (!acc[entry[\"Tournament Name\"]]) {\n            acc[entry[\"Tournament Name\"]] = [];\n        }\n        acc[entry[\"Tournament Name\"]].push(entry);\n        return acc;\n    }, {});\n\n    return (\n        <div className=\"player-detail-container\">\n            <button onClick={() => navigate(-1)} className=\"back-button\">Back</button>\n            <h1>{playerName}</h1>\n            <h2>Events:</h2>\n            <div className=\"events-grid\">\n                {Object.entries(eventData).map(([eventName, data], index) => (\n                    <div key={index} className=\"event-entry\">\n                        <p><strong>{eventName}</strong></p>\n                        <p>Total Points: {data.totalPoints}</p>\n                        <p>Junior National Points: {data.juniorNationalPoints}</p>\n                        <p>Rank: {data.rank}</p>\n                    </div>\n                ))}\n            </div>\n            <h2>Tournaments:</h2>\n            {Object.entries(tournaments).map(([tournamentName, entries], index) => (\n                <div key={index} className=\"tournament-entry\">\n                    <p><strong>{tournamentName}</strong></p>\n                    {entries.map((entry, idx) => (\n                        <p key={idx}><strong>{entry[\"Event Name\"]}</strong>, Position: {entry[\"Finishing Position\"]}, Points: {entry[\"Finishing Position Points\"]}</p>\n                    ))}\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default PlayerDetail;"],"names":["id","useParams","navigate","useNavigate","playerDetails","setPlayerDetails","useState","useEffect","details","allPlayerData","filter","player","PlayerID","toString","length","_jsx","children","playerName","FirstName","LastName","eventData","forEach","entry","totalPoints","juniorNationalPoints","rank","tournaments","reduce","acc","push","_jsxs","className","onClick","Object","entries","map","_ref","index","eventName","data","_ref2","tournamentName","idx"],"sourceRoot":""}